plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'com.yonyk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// postgres
	runtimeOnly 'org.postgresql:postgresql'

	// graphql
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	// outh2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	//JWT 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	testImplementation 'org.springframework:spring-webflux'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql"]
	packageName = 'com.yonyk.litlink.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}
