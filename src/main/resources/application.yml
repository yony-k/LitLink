spring:

  datasource:
    url: ${DB_URL}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 10

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: ${REDIRECT_URI}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # kakao 개인 정보 동의 항목 설정의 ID 값
              - profile_nickname
              - profile_image
              - account_email
            client-name: kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  graphql:
    graphiql:
      enabled: true
    schema:
      printer:
        enabled: true

jwt:
  prefix: 'Bearer '
  access-token-header: Authorization
  refresh-token-header: AuthorizationRefresh
  secret: ${SECRET_KEY}
  access-token-TTL: 300
  refresh-token-TTL: 259200

cookie:
  refresh-token:
    cookie-name: Refresh
    limit-time: 259200
    accepted-url: /
    domain: ${COOKIE_DOMAIN}
    http-only: true
    same-site: Lax

naver:
  client-id: ${CLIENT_ID}
  client-secret: ${CLIENT_SECRET}

app:
  share-url: ${BASE_URL:http://localhost:8080/api/bookmark?share=}